[
    {
      "id": "4",
      "title": "Project #4 Traffic Light System",
      "slug": "traffic-light-system",
      "date": "February 13, 2025 by Ash",
      "video": "https://www.youtube.com/watch?v=-_gYWeo8WIU",
      "image": [
          "/public/images/4trafficlight.jpg",
          "/public/images/4circuit.png"
          ],
      "content": "Controlling multiple LEDs with timed delays.",
      "components": [
        "Arduino board (Uno, Mega, etc.)",
        "1 x Red LED",
        "1 x Yellow LED",
        "1 x Green LED",
        "3 x 220Ω Resistors",
        "Jumper wires",
        "Breadboard"
      ],
      "diagram": {
        "For LED": [
          "Anode (Long leg) → Red LED → Pin 8 through a 220Ω resistor",
          "Anode (Long leg) → Red LED → Pin 9 through a 220Ω resistor",
          "Anode (Long leg) → Red LED → Pin10 through a 220Ω resistor",
          "Cathode (Short leg) → GND"
        ]
      },
      "code": "int red = 8, yellow = 9, green = 10; \n\nvoid setup() { \n   pinMode(red, OUTPUT); \n   pinMode(yellow, OUTPUT); \n   pinMode(green, OUTPUT); \n} \n\nvoid loop() { \n   digitalWrite(green, HIGH); \n   delay(5000); \n   digitalWrite(green, LOW); \n\n   digitalWrite(yellow, HIGH); \n   delay(2000); \n   digitalWrite(yellow, LOW); \n\n   digitalWrite(red, HIGH); \n   delay(5000); \n   digitalWrite(red, LOW); \n}",
      "explanation":[
        "digitalWrite(color, HIGH); → Turns the selected color LED ON.",
        "delay(); → Waits for the selected second."
      ]
    },
    {
      "id": "3",
      "title": "Project #3 Potentiometer-Controlled LED Dimmer",
      "slug": "led-dimmer",
      "date": "February 9, 2025 by Ash",
      "video": "https://www.youtube.com/watch?v=X1JNGUesn0c",
      "image": [
          "/public/images/3otled.jpg",
          "/public/images/3potdimmer circuit.png"
          ],
      "content": "This project lets you control the brightness of an LED using a potentiometer (variable resistor). It works by reading an analog input from the potentiometer and using PWM (Pulse Width Modulation) to adjust the LED brightness.",
      "components": [
        "Arduino board (Uno, Mega, etc.)",
        "LED",
        "Resistor (220Ω or 330Ω)",
        "Potentiometer (10kΩ recommended)",
        "Jumper wires",
        "Breadboard"
      ],
      "diagram": {
        "For LED": [
          "Long leg (anode, +) → Connect to Arduino digital pin 13 (or any other digital pin) through a 220Ω or 330Ω resistor",
          "Short leg (cathode, -) → Connect to GND"
        ],
        "For Potentiometer": [
          "Left Pin → 5V",
          "Middle Pin → A0 (Analog input)",
          "Right Pin → GND"
        ]
      },
      "code": "const int potPin = A0;  // Potentiometer connected to A0 \nconst int ledPin = 9;   // LED connected to PWM pin 9 \n\nvoid setup() { \n   pinMode(ledPin, OUTPUT); \n} \n\nvoid loop() { \n   int potValue = analogRead(potPin); // Read potentiometer value (0-1023) \n   int brightness = map(potValue, 0, 1023, 0, 255); // Scale to PWM range (0-255) \n\n   analogWrite(ledPin, brightness); // Adjust LED brightness \n   delay(10); // Small delay for smooth control \n}",
      "explanation":[
        "analogRead(potPin); → Reads the potentiometer value (0-1023).",
        "map(potValue, 0, 1023, 0, 255); → Converts it to PWM range (0-255).",
        "analogWrite(ledPin, brightness); → Controls LED brightness using PWM."
      ]
    },  
    {
        "id": "2",
        "title": "Project #2 Toggle Switch Led",
        "slug": "toggle-switch-led",
        "date": "February 5, 2025 by Ash",
        "video": "https://www.youtube.com/watch?v=PVwC6J2V1BM",
        "image": [
            "/public/images/2toggleswitch.jpg",
            "/public/images/2circuit.png"
            ],
        "content": "This project toggles the LED state each time the button is pressed.",
        "components": [
          "Arduino board (Uno, Mega, etc.)",
          "LED",
          "Resistor (220Ω or 330Ω)",
          "Push Button",
          "Resistor (10KΩ) for Button",
          "Jumper wires",
          "Breadboard"
        ],
        "diagram": {
          "For LED": [
            "Long leg (anode, +) → Connect to Arduino digital pin 13 (or any other digital pin) through a 220Ω or 330Ω resistor",
            "Short leg (cathode, -) → Connect to GND"
          ],
          "For Button": [
            "One leg → Arduino Pin 2 (through a 10kΩ resistor)",
            "Other leg → GND",
            "Also connect one side of the button to 5V"
          ]
        },
        "code": "const int buttonPin = 2;  // Button connected to pin 2 \nconst int ledPin = 9;  // LED connected to pin 9 \n \nbool ledState = false;    // LED state (ON/OFF) \nbool lastButtonState = HIGH; \nbool currentButtonState; \n \nvoid setup() { \n   pinMode(ledPin, OUTPUT); \n   pinMode(buttonPin, INPUT_PULLUP); // Internal pull-up resistor \n} \n\nvoid loop() { \n   currentButtonState = digitalRead(buttonPin); \n\n   // Check if button was pressed (change from HIGH to LOW) \n   if (currentButtonState == LOW && lastButtonState == HIGH) { \n     ledState = !ledState;  // Toggle LED state \n     digitalWrite(ledPin, ledState ? HIGH : LOW); \n     delay(200);  // Debounce delay to avoid multiple triggers \n   }  \n\n     lastButtonState = currentButtonState; \n   }",
        "explanation":[
          "Uses a boolean variable (ledState) to track LED status.",
          "Detects button press transition (HIGH to LOW) to toggle the LED.",
          "Debounce delay (200ms) prevents unwanted multiple toggles due to bouncing."
        ]
    },
    {
      "id": "1",
      "title": "Project #1 Blinking an LED",
      "slug": "blinking-an-led",
      "date": "February 2, 2025 by Ash",
      "video": "https://www.youtube.com/watch?v=88F5oAmwmRc",
      "image": [
        "/public/images/1blinkled.jpg",
        "/public/images/1circuit.png"
        ],
      "content": "Turning on an LED with an Arduino is one of the simplest beginner projects.",
      "components": [
        "Arduino board (Uno, Mega, etc.)",
        "LED",
        "Resistor (220Ω or 330Ω)",
        "Jumper wires",
        "Breadboard"
      ],
      "diagram": {
        "For LED": [
          "Long leg (anode, +) → Connect to Arduino digital pin 13 (or any other digital pin) through a 220Ω or 330Ω resistor",
          "Short leg (cathode, -) → Connect to GND"
        ]
      },
      "code": "void setup() { \n     pinMode(13, OUTPUT); // Set pin 13 as an output \n   } \n   void loop() { \n     digitalWrite(13, HIGH); // Turn LED on \n     delay(1000); // Wait for 1 second \n     digitalWrite(13, LOW); // Turn LED off  \n     delay(1000); // Wait for 1 cond \n   }",
      "explanation":[
        "pinMode(13, OUTPUT); → Sets pin 13 as an output.",
        "digitalWrite(13, HIGH); → Turns the LED ON.",
        "delay(1000); → Waits for 1 second.",
        "digitalWrite(13, LOW); → Turns the LED OFF.",
        "The loop repeats indefinitely, making the LED blink every second."
      ]
    }
  ]